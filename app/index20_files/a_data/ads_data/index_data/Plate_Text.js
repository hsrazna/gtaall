//
function drawPlateBnz(ptObj)
{
	var ctx = ptObj.canvas.getContext('2d');
	//
	ctx.save();
	ctx.translate(ptObj.x, ptObj.y);
	ctx.scale(ptObj.scale, ptObj.scale);
	//
	ctx.beginPath();
	ctx.moveTo(140.526,2.217);
	ctx.lineTo(138.859,2.217);
	ctx.lineTo(138.859,0);
	ctx.lineTo(140.526,0);
	ctx.lineTo(140.526,2.217);
	ctx.closePath();
	ctx.moveTo(136.359,0);
	ctx.lineTo(133.026,0);
	ctx.lineTo(133.026,1.3);
	ctx.lineTo(133.943,1.3);
	ctx.lineTo(133.943,3.217);
	ctx.lineTo(133.026,3.217);
	ctx.lineTo(133.026,4.384);
	ctx.lineTo(134.943,4.384);
	ctx.lineTo(134.943,3.1340000000000003);
	ctx.lineTo(136.36,3.1340000000000003);
	ctx.lineTo(136.36,0);
	ctx.closePath();
	ctx.moveTo(128.204,33.444);
	ctx.lineTo(0,33.444);
	ctx.lineTo(0,0);
	ctx.lineTo(126.433,0);
	ctx.lineTo(126.433,2.634);
	ctx.lineTo(125.183,2.634);
	ctx.lineTo(125.183,3.884);
	ctx.lineTo(123.766,3.884);
	ctx.lineTo(123.766,5.467);
	ctx.lineTo(122.433,5.467);
	ctx.lineTo(122.433,8.05);
	ctx.lineTo(123.766,8.05);
	ctx.lineTo(123.766,6.8);
	ctx.lineTo(125.099,6.8);
	ctx.lineTo(125.099,5.05);
	ctx.lineTo(127.682,5.05);
	ctx.lineTo(127.682,6.217);
	ctx.lineTo(129.76500000000001,6.217);
	ctx.lineTo(129.76500000000001,8.05);
	ctx.lineTo(131.598,8.05);
	ctx.lineTo(131.598,6.967);
	ctx.lineTo(132.26500000000001,6.967);
	ctx.lineTo(132.26500000000001,5.05);
	ctx.lineTo(133.76500000000001,5.05);
	ctx.lineTo(133.76500000000001,4.384);
	ctx.lineTo(135.76500000000001,4.384);
	ctx.lineTo(135.76500000000001,5.9670000000000005);
	ctx.lineTo(136.598,5.9670000000000005);
	ctx.lineTo(136.598,4.9670000000000005);
	ctx.lineTo(138.098,4.9670000000000005);
	ctx.lineTo(138.098,4.134);
	ctx.lineTo(139.098,4.134);
	ctx.lineTo(139.098,3.05);
	ctx.lineTo(140.431,3.05);
	ctx.lineTo(140.431,1.467);
	ctx.lineTo(142.431,1.467);
	ctx.lineTo(142.431,0);
	ctx.lineTo(144.264,0);
	ctx.lineTo(144.264,1.3);
	ctx.lineTo(146.681,1.3);
	ctx.lineTo(146.681,3.1340000000000003);
	ctx.lineTo(148.014,3.1340000000000003);
	ctx.lineTo(148.014,2.05);
	ctx.lineTo(150.347,2.05);
	ctx.lineTo(150.347,0);
	ctx.lineTo(152.597,0);
	ctx.lineTo(152.597,1.634);
	ctx.lineTo(151.597,1.634);
	ctx.lineTo(151.597,2.9669999999999996);
	ctx.lineTo(149.68,2.9669999999999996);
	ctx.lineTo(149.68,4.05);
	ctx.lineTo(148.347,4.05);
	ctx.lineTo(148.347,6.217);
	ctx.lineTo(149.43,6.217);
	ctx.lineTo(149.43,7.8);
	ctx.lineTo(148.513,7.8);
	ctx.lineTo(148.513,9.05);
	ctx.lineTo(147.346,9.05);
	ctx.lineTo(147.346,10.384);
	ctx.lineTo(146.179,10.384);
	ctx.lineTo(146.179,11.467);
	ctx.lineTo(147.679,11.467);
	ctx.lineTo(147.679,13.55);
	ctx.lineTo(145.679,13.55);
	ctx.lineTo(145.679,12.384);
	ctx.lineTo(144.596,12.384);
	ctx.lineTo(144.596,13.55);
	ctx.lineTo(143.596,13.55);
	ctx.lineTo(143.596,14.217);
	ctx.lineTo(142.679,14.217);
	ctx.lineTo(142.679,15.217);
	ctx.lineTo(143.679,15.217);
	ctx.lineTo(143.679,17.467);
	ctx.lineTo(141.346,17.467);
	ctx.lineTo(141.346,16.467);
	ctx.lineTo(140.513,16.467);
	ctx.lineTo(140.513,17.467);
	ctx.lineTo(139.346,17.467);
	ctx.lineTo(139.346,18.634);
	ctx.lineTo(138.429,18.634);
	ctx.lineTo(138.429,19.634);
	ctx.lineTo(140.596,19.634);
	ctx.lineTo(140.596,21.3);
	ctx.lineTo(138.679,21.3);
	ctx.lineTo(138.679,22.884);
	ctx.lineTo(137.096,22.884);
	ctx.lineTo(137.096,24.467);
	ctx.lineTo(141.013,24.467);
	ctx.lineTo(141.013,26.8);
	ctx.lineTo(142.763,26.8);
	ctx.lineTo(142.763,28.8);
	ctx.lineTo(140.513,28.8);
	ctx.lineTo(140.513,30.55);
	ctx.lineTo(142.93,30.55);
	ctx.lineTo(142.93,32.217);
	ctx.lineTo(136.013,32.217);
	ctx.lineTo(136.013,33.445);
	ctx.lineTo(130.43,33.445);
	ctx.lineTo(130.43,30.752);
	ctx.lineTo(131.597,30.752);
	ctx.lineTo(131.597,30.05);
	ctx.lineTo(130.514,30.05);
	ctx.lineTo(130.514,27.384);
	ctx.lineTo(127.68100000000001,27.384);
	ctx.lineTo(127.68100000000001,25.967);
	ctx.lineTo(126.51400000000001,25.967);
	ctx.lineTo(126.51400000000001,27.049999999999997);
	ctx.lineTo(124.76400000000001,27.049999999999997);
	ctx.lineTo(124.76400000000001,28.299999999999997);
	ctx.lineTo(123.76400000000001,28.299999999999997);
	ctx.lineTo(123.76400000000001,30.133999999999997);
	ctx.lineTo(125.26400000000001,30.133999999999997);
	ctx.lineTo(125.26400000000001,32.3);
	ctx.lineTo(126.68100000000001,32.3);
	ctx.lineTo(126.68100000000001,31.549999999999997);
	ctx.lineTo(128.202,31.549999999999997);
	ctx.lineTo(128.202,33.444);
	ctx.closePath();
	ctx.moveTo(141.109,14.217);
	ctx.lineTo(142.192,14.217);
	ctx.lineTo(142.192,13.217);
	ctx.lineTo(143.609,13.217);
	ctx.lineTo(143.609,11.634);
	ctx.lineTo(145.026,11.55);
	ctx.lineTo(144.943,10.634);
	ctx.lineTo(143.11,10.634);
	ctx.lineTo(143.11,11.55);
	ctx.lineTo(141.11,11.55);
	ctx.lineTo(141.11,14.217);
	ctx.closePath();
	ctx.moveTo(136.943,22.3);
	ctx.lineTo(134.86,22.217000000000002);
	ctx.lineTo(134.86,23.967000000000002);
	ctx.lineTo(136.943,23.967000000000002);
	ctx.lineTo(136.943,22.3);
	ctx.closePath();
	ctx.moveTo(133.776,12.967);
	ctx.lineTo(135.943,12.967);
	ctx.lineTo(135.943,11.967);
	ctx.lineTo(136.86,11.967);
	ctx.lineTo(136.86,10.217);
	ctx.lineTo(134.943,10.217);
	ctx.lineTo(134.943,10.884);
	ctx.lineTo(133.776,10.884);
	ctx.lineTo(133.776,12.967);
	ctx.closePath();
	ctx.moveTo(117.026,10.384);
	ctx.lineTo(118.193,10.384);
	ctx.lineTo(118.193,9.3);
	ctx.lineTo(119.276,9.3);
	ctx.lineTo(119.276,8.217);
	ctx.lineTo(117.026,8.134);
	ctx.lineTo(117.026,10.384);
	ctx.closePath();
	ctx.moveTo(120.776,17.217);
	ctx.lineTo(117.943,17.217);
	ctx.lineTo(117.943,16.217);
	ctx.lineTo(117.193,16.217);
	ctx.lineTo(117.193,17.195999999999998);
	ctx.lineTo(116.026,17.217);
	ctx.lineTo(116.026,18.134);
	ctx.lineTo(115.109,18.134);
	ctx.lineTo(115.109,19.884);
	ctx.lineTo(116.776,19.883);
	ctx.lineTo(116.776,18.967);
	ctx.lineTo(118.776,18.967);
	ctx.lineTo(118.776,20.717);
	ctx.lineTo(119.776,20.717);
	ctx.lineTo(119.776,19.8);
	ctx.lineTo(120.776,19.8);
	ctx.lineTo(120.776,17.217);
	ctx.closePath();
	ctx.moveTo(126.859,14.217);
	ctx.lineTo(126.859,15.55);
	ctx.lineTo(129.02599999999998,15.634);
	ctx.lineTo(129.02599999999998,17.217);
	ctx.lineTo(130.19299999999998,17.217);
	ctx.lineTo(130.19299999999998,16.3);
	ctx.lineTo(132.52599999999998,16.3);
	ctx.lineTo(132.52599999999998,15.217);
	ctx.lineTo(131.44299999999998,15.217);
	ctx.lineTo(131.44299999999998,14.217);
	ctx.lineTo(126.859,14.217);
	ctx.closePath();
	ctx.moveTo(124.526,11.217);
	ctx.lineTo(126.026,11.217);
	ctx.lineTo(126.026,13.05);
	ctx.lineTo(127.776,13.05);
	ctx.lineTo(127.776,11.3);
	ctx.lineTo(128.776,11.3);
	ctx.lineTo(128.776,10.134);
	ctx.lineTo(126.27600000000001,10.134);
	ctx.lineTo(126.27600000000001,8.884);
	ctx.lineTo(124.52600000000001,8.884);
	ctx.lineTo(124.52600000000001,11.217);
	//
	if(ptObj.alpha < 0.001)
	{
		ptObj.alpha = 0;
	}
	else if(ptObj.alpha > 1)
	{
		ptObj.alpha = 1;
	}
	//
	var plateGrad = ctx.createLinearGradient(0, 0, 135, 30);
    plateGrad.addColorStop(0,    "rgba(140, 10, 0, " + ptObj.alpha * 0.3 + ")");
    plateGrad.addColorStop(0.37, "rgba(140, 10, 0, " + ptObj.alpha + ")");
    plateGrad.addColorStop(0.72, "rgba(140, 10, 0, " + ptObj.alpha + ")");
    plateGrad.addColorStop(1,    "rgba(140, 10, 0, " + ptObj.alpha * 0.2 + ")");
    ctx.fillStyle = plateGrad;
    ctx.fill();
    //
    var pattern = ctx.createPattern(ptObj.pic, 'repeat');
	ctx.fillStyle = pattern;
	//
	ctx.globalCompositeOperation = "source-in";
	//ctx.globalAlpha = 0.95;
	ctx.fill();
	//
	//ctx.globalAlpha = 1;
	ctx.globalCompositeOperation = "destination-over";
	ctx.fillStyle = plateGrad;
    ctx.fill();
    //
    ctx.globalCompositeOperation = "source-over";
    //
    var plateGrad2 = ctx.createLinearGradient(0, 0, 120, 0);
    plateGrad2.addColorStop(0,    "rgba(200, 95, 50, " + ptObj.alpha * 0.3 + ")");
    plateGrad2.addColorStop(0.37, "rgba(200, 95, 50, " + ptObj.alpha + ")");
    plateGrad2.addColorStop(0.72, "rgba(200, 95, 50, " + ptObj.alpha + ")");
    plateGrad2.addColorStop(1,    "rgba(200, 95, 50, " + ptObj.alpha * 0.1 + ")");
    ctx.fillStyle = plateGrad2;
    ctx.fillRect(0, 0, 152, 1);
    ctx.fillRect(0, 33, 132, 1);
    //
ctx.fillStyle = "rgba(255, 255, 255, " + ptObj.alpha + ")";
ctx.translate(142 / 2, 33 / 2);
drawBenzText(ctx);
	//
	ctx.restore();
}

//
function drawPlateDzl(ptObj)
{
	var ctx = ptObj.canvas.getContext('2d');
	//
	ctx.save();
	ctx.translate(ptObj.x, ptObj.y);
	ctx.scale(ptObj.scale, ptObj.scale);
	//
	ctx.beginPath();
	ctx.moveTo(-166.316,33.444);
	ctx.lineTo(-168.78300000000002,33.444);
	ctx.lineTo(-168.78300000000002,27.737000000000002);
	ctx.lineTo(-165.80900000000003,27.737000000000002);
	ctx.lineTo(-165.80900000000003,29.509);
	ctx.lineTo(-164.73400000000004,29.509);
	ctx.lineTo(-164.73400000000004,30.142);
	ctx.lineTo(-166.31600000000003,30.142);
	ctx.lineTo(-166.31600000000003,33.444);
	ctx.closePath();
	ctx.moveTo(-162.582,25.966);
	ctx.lineTo(-162.582,27.168);
	ctx.lineTo(-164.48,27.168);
	ctx.lineTo(-164.48,29.256);
	ctx.lineTo(-163.02499999999998,29.256);
	ctx.lineTo(-163.02499999999998,30.838);
	ctx.lineTo(-160.49399999999997,30.838);
	ctx.lineTo(-160.49399999999997,33.444);
	ctx.lineTo(-157.64599999999996,33.444);
	ctx.lineTo(-157.64599999999996,29.319000000000003);
	ctx.lineTo(-159.10199999999995,29.319000000000003);
	ctx.lineTo(-159.10199999999995,27.548000000000002);
	ctx.lineTo(-161,27.548000000000002);
	ctx.lineTo(-161,25.966);
	ctx.lineTo(-162.582,25.966);
	ctx.closePath();
	ctx.moveTo(-156.065,3.188);
	ctx.lineTo(-156.065,4.01);
	ctx.lineTo(-154.23,4.01);
	ctx.lineTo(-154.23,3.377);
	ctx.lineTo(-152.837,3.377);
	ctx.lineTo(-152.837,2.175);
	ctx.lineTo(-152.20399999999998,2.175);
	ctx.lineTo(-152.20399999999998,0);
	ctx.lineTo(-157.962,0);
	ctx.lineTo(-157.962,2.238);
	ctx.lineTo(-156.82299999999998,2.238);
	ctx.lineTo(-156.82299999999998,1.162);
	ctx.lineTo(-155.17799999999997,1.162);
	ctx.lineTo(-155.17799999999997,3.187);
	ctx.lineTo(-156.065,3.187);
	ctx.closePath();
	ctx.moveTo(0,33.444);
	ctx.lineTo(-152.079,33.444);
	ctx.lineTo(-152.079,30.965000000000003);
	ctx.lineTo(-149.928,30.965000000000003);
	ctx.lineTo(-149.928,28.181000000000004);
	ctx.lineTo(-151.763,28.181000000000004);
	ctx.lineTo(-151.763,26.979000000000006);
	ctx.lineTo(-150.055,26.979000000000006);
	ctx.lineTo(-150.055,25.08);
	ctx.lineTo(-152.332,25.08);
	ctx.lineTo(-152.332,22.676);
	ctx.lineTo(-151.256,22.676);
	ctx.lineTo(-151.256,21.41);
	ctx.lineTo(-152.965,21.41);
	ctx.lineTo(-152.965,19.069);
	ctx.lineTo(-154.8,19.069);
	ctx.lineTo(-154.8,17.487);
	ctx.lineTo(-156.95100000000002,17.487);
	ctx.lineTo(-156.95100000000002,19.133);
	ctx.lineTo(-158.59600000000003,19.133);
	ctx.lineTo(-158.59600000000003,21.98);
	ctx.lineTo(-157.71100000000004,21.98);
	ctx.lineTo(-157.71100000000004,24.322);
	ctx.lineTo(-160.24100000000004,24.322);
	ctx.lineTo(-160.24100000000004,22.107);
	ctx.lineTo(-164.79700000000005,22.107);
	ctx.lineTo(-164.79700000000005,23.499);
	ctx.lineTo(-168.78300000000004,23.499);
	ctx.lineTo(-168.78300000000004,17.107999999999997);
	ctx.lineTo(-167.77100000000004,17.107999999999997);
	ctx.lineTo(-167.77100000000004,19.638999999999996);
	ctx.lineTo(-167.13800000000003,19.638999999999996);
	ctx.lineTo(-167.13800000000003,21.789999999999996);
	ctx.lineTo(-165.93500000000003,21.789999999999996);
	ctx.lineTo(-165.93500000000003,19.638999999999996);
	ctx.lineTo(-163.78500000000003,19.638999999999996);
	ctx.lineTo(-163.78500000000003,18.183999999999997);
	ctx.lineTo(-160.55700000000002,18.183999999999997);
	ctx.lineTo(-160.55700000000002,15.399999999999999);
	ctx.lineTo(-159.102,15.399999999999999);
	ctx.lineTo(-159.102,13.184999999999999);
	ctx.lineTo(-161.064,13.184999999999999);
	ctx.lineTo(-161.064,11.665999999999999);
	ctx.lineTo(-161.886,11.665999999999999);
	ctx.lineTo(-161.886,12.425999999999998);
	ctx.lineTo(-164.66899999999998,12.425999999999998);
	ctx.lineTo(-164.66899999999998,11.223999999999998);
	ctx.lineTo(-166.82099999999997,11.096999999999998);
	ctx.lineTo(-166.82099999999997,13.247999999999998);
	ctx.lineTo(-168.78199999999998,13.247999999999998);
	ctx.lineTo(-168.78199999999998,8.817999999999998);
	ctx.lineTo(-164.22599999999997,8.817999999999998);
	ctx.lineTo(-164.22599999999997,6.225);
	ctx.lineTo(-165.74499999999998,6.225);
	ctx.lineTo(-165.74499999999998,5.212);
	ctx.lineTo(-159.60699999999997,5.212);
	ctx.lineTo(-159.60699999999997,6.478);
	ctx.lineTo(-160.87299999999996,6.478);
	ctx.lineTo(-160.87299999999996,7.744);
	ctx.lineTo(-159.73399999999995,7.744);
	ctx.lineTo(-159.73399999999995,11.224);
	ctx.lineTo(-157.70999999999995,11.224);
	ctx.lineTo(-157.70999999999995,8.06);
	ctx.lineTo(-156.76099999999994,8.06);
	ctx.lineTo(-156.76099999999994,6.921);
	ctx.lineTo(-155.74799999999993,6.921);
	ctx.lineTo(-155.74799999999993,5.845);
	ctx.lineTo(-154.67299999999994,5.845);
	ctx.lineTo(-154.67299999999994,8.312999999999999);
	ctx.lineTo(-155.81199999999995,8.312999999999999);
	ctx.lineTo(-155.81199999999995,9.198999999999998);
	ctx.lineTo(-156.50699999999995,9.198999999999998);
	ctx.lineTo(-156.50699999999995,14.070999999999998);
	ctx.lineTo(-157.96199999999996,14.070999999999998);
	ctx.lineTo(-157.96199999999996,16.221999999999998);
	ctx.lineTo(-155.87399999999997,16.221999999999998);
	ctx.lineTo(-155.87399999999997,17.235);
	ctx.lineTo(-150.24299999999997,17.235);
	ctx.lineTo(-150.24299999999997,8.692);
	ctx.lineTo(-148.84999999999997,8.692);
	ctx.lineTo(-148.84999999999997,7.174);
	ctx.lineTo(-147.01599999999996,7.174);
	ctx.lineTo(-147.01599999999996,6.161);
	ctx.lineTo(-146.12899999999996,6.161);
	ctx.lineTo(-146.12899999999996,5.086);
	ctx.lineTo(-145.36999999999998,5.086);
	ctx.lineTo(-145.36999999999998,2.997);
	ctx.lineTo(-143.85099999999997,2.997);
	ctx.lineTo(-143.85099999999997,2.238);
	ctx.lineTo(-142.83799999999997,2.238);
	ctx.lineTo(-142.83799999999997,1.289);
	ctx.lineTo(-143.91299999999995,1.289);
	ctx.lineTo(-143.91299999999995,0);
	ctx.lineTo(-142.71199999999996,0);
	ctx.lineTo(-142.71199999999996,0.783);
	ctx.lineTo(-140.87699999999995,0.783);
	ctx.lineTo(-140.87699999999995,1.9849999999999999);
	ctx.lineTo(-142.07899999999995,1.9849999999999999);
	ctx.lineTo(-142.07899999999995,4.073);
	ctx.lineTo(-140.36999999999995,4.073);
	ctx.lineTo(-140.36999999999995,6.731);
	ctx.lineTo(-139.04199999999994,6.731);
	ctx.lineTo(-139.04199999999994,6.035);
	ctx.lineTo(-137.96599999999995,6.035);
	ctx.lineTo(-137.96599999999995,4.58);
	ctx.lineTo(-136.00499999999994,4.58);
	ctx.lineTo(-136.00499999999994,2.238);
	ctx.lineTo(-138.21999999999994,2.238);
	ctx.lineTo(-138.21999999999994,0.087);
	ctx.lineTo(-136.89099999999993,0.087);
	ctx.lineTo(-136.89099999999993,0);
	ctx.lineTo(-134.86699999999993,0);
	ctx.lineTo(-134.86699999999993,0.403);
	ctx.lineTo(-134.86699999999993,5.022);
	ctx.lineTo(-132.77899999999994,5.022);
	ctx.lineTo(-132.77899999999994,7.11);
	ctx.lineTo(-131.00699999999995,7.11);
	ctx.lineTo(-131.00699999999995,9.388);
	ctx.lineTo(-129.48799999999994,9.388);
	ctx.lineTo(-129.48799999999994,12.362);
	ctx.lineTo(-128.53899999999993,12.362);
	ctx.lineTo(-128.53899999999993,11.16);
	ctx.lineTo(-127.58999999999993,11.16);
	ctx.lineTo(-127.58999999999993,10.085);
	ctx.lineTo(-126.76799999999993,10.085);
	ctx.lineTo(-126.76799999999993,9.136);
	ctx.lineTo(-128.98299999999992,9.136);
	ctx.lineTo(-128.98299999999992,7.048);
	ctx.lineTo(-129.99499999999992,7.048);
	ctx.lineTo(-129.99499999999992,4.58);
	ctx.lineTo(-131.89299999999992,4.58);
	ctx.lineTo(-131.89299999999992,3.314);
	ctx.lineTo(-130.81799999999993,3.314);
	ctx.lineTo(-130.81799999999993,1.227);
	ctx.lineTo(-133.28599999999992,1.227);
	ctx.lineTo(-133.28599999999992,0);
	ctx.lineTo(-130.31099999999992,0);
	ctx.lineTo(-130.31099999999992,0.214);
	ctx.lineTo(-127.77999999999992,0.214);
	ctx.lineTo(-127.77999999999992,1.8599999999999999);
	ctx.lineTo(-126.83199999999992,1.8599999999999999);
	ctx.lineTo(-126.83199999999992,4.897);
	ctx.lineTo(-125.69199999999992,4.897);
	ctx.lineTo(-125.69199999999992,8.314);
	ctx.lineTo(-124.55299999999993,8.314);
	ctx.lineTo(-124.55299999999993,11.92);
	ctx.lineTo(-123.60399999999993,11.92);
	ctx.lineTo(-123.60399999999993,14.261);
	ctx.lineTo(-121.76999999999992,14.261);
	ctx.lineTo(-121.76999999999992,12.172999999999998);
	ctx.lineTo(-120.37699999999992,12.172999999999998);
	ctx.lineTo(-120.37699999999992,10.337999999999997);
	ctx.lineTo(-119.04899999999992,10.337999999999997);
	ctx.lineTo(-119.04899999999992,8.25);
	ctx.lineTo(-116.07399999999993,8.25);
	ctx.lineTo(-116.07399999999993,6.415);
	ctx.lineTo(-119.87099999999992,6.415);
	ctx.lineTo(-119.87099999999992,4.264);
	ctx.lineTo(-122.14799999999993,4.264);
	ctx.lineTo(-122.14799999999993,6.732);
	ctx.lineTo(-123.91899999999993,6.732);
	ctx.lineTo(-123.91899999999993,1.9220000000000006);
	ctx.lineTo(-121.26199999999993,1.9220000000000006);
	ctx.lineTo(-121.26199999999993,0);
	ctx.lineTo(-116.00999999999993,0);
	ctx.lineTo(-116.00999999999993,2.365);
	ctx.lineTo(-114.17499999999994,2.365);
	ctx.lineTo(-114.17499999999994,4.2);
	ctx.lineTo(-111.89799999999994,4.2);
	ctx.lineTo(-111.89799999999994,3.062);
	ctx.lineTo(-111.20199999999994,3.062);
	ctx.lineTo(-111.20199999999994,1.29);
	ctx.lineTo(-113.09999999999994,1.29);
	ctx.lineTo(-113.09999999999994,0);
	ctx.lineTo(0,0);
	ctx.lineTo(0,33.444);
	ctx.closePath();
	ctx.moveTo(-117.025,3.378);
	ctx.lineTo(-118.796,3.378);
	ctx.lineTo(-118.796,1.479);
	ctx.lineTo(-120.631,1.4160000000000001);
	ctx.lineTo(-120.631,3.5040000000000004);
	ctx.lineTo(-118.985,3.5040000000000004);
	ctx.lineTo(-118.985,5.529);
	ctx.lineTo(-117.024,5.529);
	ctx.lineTo(-117.024,3.378);
	ctx.closePath();
	ctx.moveTo(-147.145,13.438);
	ctx.lineTo(-145.309,13.438);
	ctx.lineTo(-145.309,15.399000000000001);
	ctx.lineTo(-143.094,15.399000000000001);
	ctx.lineTo(-143.094,13.311);
	ctx.lineTo(-144.676,13.311);
	ctx.lineTo(-144.676,11.096);
	ctx.lineTo(-147.14499999999998,11.096);
	ctx.lineTo(-147.14499999999998,13.438);
	ctx.closePath();
	ctx.moveTo(-140.754,22.043);
	ctx.lineTo(-144.04299999999998,22.043);
	ctx.lineTo(-144.04299999999998,24.826999999999998);
	ctx.lineTo(-145.43599999999998,24.826999999999998);
	ctx.lineTo(-145.43599999999998,19.448999999999998);
	ctx.lineTo(-146.70199999999997,19.448999999999998);
	ctx.lineTo(-146.63899999999998,20.334999999999997);
	ctx.lineTo(-148.28499999999997,20.397999999999996);
	ctx.lineTo(-148.28499999999997,22.232999999999997);
	ctx.lineTo(-147.14599999999996,22.232999999999997);
	ctx.lineTo(-147.14599999999996,24.447999999999997);
	ctx.lineTo(-148.60099999999997,24.447999999999997);
	ctx.lineTo(-148.60099999999997,28.433999999999997);
	ctx.lineTo(-146.38599999999997,28.433999999999997);
	ctx.lineTo(-146.38599999999997,29.445999999999998);
	ctx.lineTo(-144.86699999999996,29.445999999999998);
	ctx.lineTo(-144.86699999999996,28.18);
	ctx.lineTo(-143.79199999999997,28.18);
	ctx.lineTo(-143.79199999999997,26.788);
	ctx.lineTo(-142.146,26.788);
	ctx.lineTo(-142.146,25.017);
	ctx.lineTo(-140.755,25.017);
	ctx.lineTo(-140.755,22.043);
	ctx.closePath();
	ctx.moveTo(-139.045,13.248);
	ctx.lineTo(-140.754,13.248);
	ctx.lineTo(-140.754,15.145999999999999);
	ctx.lineTo(-139.045,15.145999999999999);
	ctx.lineTo(-139.045,13.248);
	ctx.closePath();
	ctx.moveTo(-137.716,12.299);
	ctx.lineTo(-136.64100000000002,12.299);
	ctx.lineTo(-136.64100000000002,15.463);
	ctx.lineTo(-135.56500000000003,15.463);
	ctx.lineTo(-135.56500000000003,13.501999999999999);
	ctx.lineTo(-133.66700000000003,13.501999999999999);
	ctx.lineTo(-133.66700000000003,12.806);
	ctx.lineTo(-132.65500000000003,12.806);
	ctx.lineTo(-132.65500000000003,11.097);
	ctx.lineTo(-135.56500000000003,11.097);
	ctx.lineTo(-135.56500000000003,9.769);
	ctx.lineTo(-133.92000000000002,9.769);
	ctx.lineTo(-133.92000000000002,8.06);
	ctx.lineTo(-135.186,8.06);
	ctx.lineTo(-135.186,6.541);
	ctx.lineTo(-136.83100000000002,6.541);
	ctx.lineTo(-136.76800000000003,8.756);
	ctx.lineTo(-136.76800000000003,10.149000000000001);
	ctx.lineTo(-137.71600000000004,10.149000000000001);
	ctx.lineTo(-137.71600000000004,12.299);
	ctx.closePath();
	ctx.moveTo(-131.009,21.031);
	ctx.lineTo(-133.09799999999998,21.031);
	ctx.lineTo(-133.09799999999998,19.133);
	ctx.lineTo(-134.86899999999997,19.133);
	ctx.lineTo(-134.86899999999997,20.272);
	ctx.lineTo(-136.95699999999997,20.272);
	ctx.lineTo(-136.95699999999997,22.993);
	ctx.lineTo(-134.93199999999996,22.993);
	ctx.lineTo(-134.93199999999996,24.955);
	ctx.lineTo(-133.72999999999996,24.955);
	ctx.lineTo(-133.72999999999996,23.563);
	ctx.lineTo(-132.40099999999995,23.563);
	ctx.lineTo(-132.40099999999995,21.98);
	ctx.lineTo(-131.00899999999996,21.98);
	ctx.lineTo(-131.00899999999996,21.031);
	ctx.closePath();
	ctx.moveTo(-116.959,19.477);
	ctx.lineTo(-118.626,19.467);
	ctx.lineTo(-118.626,20.532);
	ctx.lineTo(-120.126,20.55);
	ctx.lineTo(-120.126,22.487000000000002);
	ctx.lineTo(-118.037,22.487000000000002);
	ctx.lineTo(-118.037,21.301000000000002);
	ctx.lineTo(-116.959,21.301000000000002);
	ctx.lineTo(-116.959,19.477);
	ctx.closePath();
	ctx.moveTo(-15.959,9.133);
	ctx.lineTo(-16.781,9.133);
	ctx.lineTo(-16.781,7.191);
	ctx.lineTo(-15.983999999999998,7.191);
	ctx.lineTo(-15.983999999999998,6.169);
	ctx.lineTo(-17.959,6.169);
	ctx.lineTo(-17.959,9.466);
	ctx.lineTo(-19.959,9.466);
	ctx.lineTo(-19.959,11.633);
	ctx.lineTo(-17.959,11.633);
	ctx.lineTo(-17.959,13.466);
	ctx.lineTo(-15.959,13.466);
	ctx.lineTo(-15.959,9.133);
	ctx.closePath();
	//
	if(ptObj.alpha < 0.001)
	{
		ptObj.alpha = 0;
	}
	else if(ptObj.alpha > 1)
	{
		ptObj.alpha = 1;
	}
	//
	var plateGrad = ctx.createLinearGradient(30, 0, -155, 0);
    plateGrad.addColorStop(0,    "rgba(140, 10, 0, " + ptObj.alpha * 0.3 + ")");
    plateGrad.addColorStop(0.37, "rgba(140, 10, 0, " + ptObj.alpha + ")");
    plateGrad.addColorStop(0.72, "rgba(140, 10, 0, " + ptObj.alpha + ")");
    plateGrad.addColorStop(1,    "rgba(140, 10, 0, " + ptObj.alpha * 0.2 + ")");
    ctx.fillStyle = plateGrad;
    ctx.fill();
    //
    var pattern = ctx.createPattern(ptObj.pic, 'repeat');
	ctx.fillStyle = pattern;
	//
	ctx.globalCompositeOperation = "source-in";
	//ctx.globalAlpha = 0.95;
	ctx.fill();
	//
	//ctx.globalAlpha = 1;
	ctx.globalCompositeOperation = "destination-over";
	ctx.fillStyle = plateGrad;
    ctx.fill();
    //
    ctx.globalCompositeOperation = "source-over";
    //
    var plateGrad2 = ctx.createLinearGradient(0, 0, -120, 0);
    plateGrad2.addColorStop(0,    "rgba(200, 95, 50, " + ptObj.alpha * 0.3 + ")");
    plateGrad2.addColorStop(0.37, "rgba(200, 95, 50, " + ptObj.alpha + ")");
    plateGrad2.addColorStop(0.72, "rgba(200, 95, 50, " + ptObj.alpha + ")");
    plateGrad2.addColorStop(1,    "rgba(200, 95, 50, " + ptObj.alpha * 0.1 + ")");
    ctx.fillStyle = plateGrad2;
    ctx.fillRect(-165, 0, 165, 1);
    ctx.fillRect(-165, 33, 165, 1);
    //
ctx.fillStyle = "rgba(255, 255, 255, " + ptObj.alpha + ")";
ctx.translate(-135 / 2, 33 / 2);
drawDzlText(ctx);
	//
	ctx.restore();
}

//
function drawPlateOr(ptObj)
{
	var ctx = ptObj.canvas.getContext('2d');
	//
	ctx.save();
	ctx.translate(ptObj.x, ptObj.y);
	ctx.scale(ptObj.scale * 0.8, ptObj.scale * 0.8);
	//
	ctx.beginPath();
	ctx.moveTo(-10.818,20.687);
	ctx.lineTo(-12.818,20.687);
	ctx.lineTo(-12.818,17.354);
	ctx.lineTo(-10.151,17.358999999999998);
	ctx.lineTo(-10.151,20.02);
	ctx.lineTo(-8.484,20.02);
	ctx.lineTo(-8.484,22.686999999999998);
	ctx.lineTo(-3.151,22.686999999999998);
	ctx.lineTo(-3.151,20.02);
	ctx.lineTo(-1.1509999999999998,20.02);
	ctx.lineTo(-1.1509999999999998,21.52);
	ctx.lineTo(3.1820000000000004,21.52);
	ctx.lineTo(3.1820000000000004,23.686999999999998);
	ctx.lineTo(0.016,23.686999999999998);
	ctx.lineTo(0.016,25.354);
	ctx.lineTo(-2.817,25.354);
	ctx.lineTo(-2.817,27.433);
	ctx.bezierCurveTo(-0.9740000000000002,28.115,0.8639999999999999,28.686,2.683,29.148);
	ctx.lineTo(2.683,25.52);
	ctx.lineTo(6.5169999999999995,25.52);
	ctx.lineTo(6.5169999999999995,24.187);
	ctx.lineTo(8.017,24.187);
	ctx.lineTo(8.017,22.354000000000003);
	ctx.lineTo(10.183,22.354000000000003);
	ctx.lineTo(10.183,24.520000000000003);
	ctx.lineTo(14.683,24.520000000000003);
	ctx.lineTo(14.683,26.020000000000003);
	ctx.lineTo(13.183,26.020000000000003);
	ctx.lineTo(13.183,28.854000000000003);
	ctx.lineTo(16.851,28.854000000000003);
	ctx.lineTo(16.851,30.472);
	ctx.bezierCurveTo(18.680999999999997,30.316000000000003,20.441,30.024,22.101,29.584);
	ctx.lineTo(22.101,27.771);
	ctx.lineTo(20.351,27.771);
	ctx.lineTo(20.351,26.104);
	ctx.lineTo(17.183999999999997,26.104);
	ctx.lineTo(17.183999999999997,23.938);
	ctx.lineTo(15.35,23.938);
	ctx.lineTo(15.35,22.270999999999997);
	ctx.lineTo(13.016,22.270999999999997);
	ctx.lineTo(13.016,20.938);
	ctx.lineTo(11.183,20.938);
	ctx.lineTo(11.183,17.354);
	ctx.lineTo(15.683,17.354);
	ctx.lineTo(15.683,16.521);
	ctx.lineTo(19.85,16.521);
	ctx.lineTo(19.85,18.02);
	ctx.lineTo(23.35,18.02);
	ctx.lineTo(23.35,14.520999999999999);
	ctx.lineTo(26.433,14.520999999999999);
	ctx.lineTo(26.433,13.270999999999999);
	ctx.lineTo(30.85,13.270999999999999);
	ctx.lineTo(30.85,15.270999999999999);
	ctx.lineTo(33.35,15.270999999999999);
	ctx.lineTo(33.35,13.270999999999999);
	ctx.lineTo(36.987,13.270999999999999);
	ctx.bezierCurveTo(37.257000000000005,10.687,37.043,7.965999999999999,36.382000000000005,5.187999999999999);
	ctx.lineTo(33.684000000000005,5.187999999999999);
	ctx.lineTo(33.684000000000005,-2.1080000000000014);
	ctx.bezierCurveTo(32.74100000000001,-3.998000000000001,31.609000000000005,-5.879000000000001,30.304000000000006,-7.729000000000002);
	ctx.lineTo(28.267000000000007,-7.729000000000002);
	ctx.lineTo(28.267000000000007,-5.396000000000002);
	ctx.lineTo(26.6,-5.396000000000002);
	ctx.lineTo(26.6,-3.729000000000002);
	ctx.lineTo(24.266000000000002,-3.729000000000002);
	ctx.lineTo(24.266000000000002,-8.479000000000003);
	ctx.lineTo(21.933,-8.479000000000003);
	ctx.lineTo(21.933,-11.062000000000003);
	ctx.lineTo(19.266,-11.062000000000003);
	ctx.lineTo(19.266,-13.312000000000003);
	ctx.lineTo(21.1,-13.312000000000003);
	ctx.lineTo(21.1,-15.647000000000002);
	ctx.lineTo(22.766000000000002,-15.647000000000002);
	ctx.lineTo(22.766000000000002,-16.240000000000002);
	ctx.bezierCurveTo(20.823,-18.023000000000003,18.703000000000003,-19.723000000000003,16.422,-21.312);
	ctx.lineTo(15.016,-21.312);
	ctx.lineTo(15.016,-22.263);
	ctx.bezierCurveTo(14.693,-22.476000000000003,14.373,-22.692,14.044,-22.900000000000002);
	ctx.bezierCurveTo(11.058,-24.786,8.004000000000001,-26.368000000000002,4.947000000000001,-27.647000000000002);
	ctx.lineTo(0.516,-27.647000000000002);
	ctx.lineTo(0.516,-26.313000000000002);
	ctx.lineTo(-1.984,-26.313000000000002);
	ctx.lineTo(-1.984,-23.813000000000002);
	ctx.lineTo(-4.317,-23.813000000000002);
	ctx.lineTo(-4.317,-25.480000000000004);
	ctx.lineTo(-6.65,-25.480000000000004);
	ctx.lineTo(-6.65,-23.480000000000004);
	ctx.lineTo(-8.983,-23.480000000000004);
	ctx.lineTo(-8.983,-28.480000000000004);
	ctx.lineTo(-11.816,-28.480000000000004);
	ctx.lineTo(-11.816,-26.147000000000006);
	ctx.lineTo(-14.316,-26.147000000000006);
	ctx.lineTo(-14.316,-23.147000000000006);
	ctx.lineTo(-16.483,-23.147000000000006);
	ctx.lineTo(-16.483,-21.147000000000006);
	ctx.lineTo(-18.816000000000003,-21.147000000000006);
	ctx.lineTo(-18.816000000000003,-18.647000000000006);
	ctx.lineTo(-20.649,-18.647000000000006);
	ctx.lineTo(-20.649,-25.313000000000006);
	ctx.lineTo(-22.982,-25.313000000000006);
	ctx.lineTo(-22.982,-30.471000000000007);
	ctx.bezierCurveTo(-26.612,-29.396000000000008,-29.749,-27.621000000000006,-32.164,-25.147000000000006);
	ctx.lineTo(-26.482,-25.147000000000006);
	ctx.lineTo(-26.482,-22.813000000000006);
	ctx.lineTo(-30.814999999999998,-22.813000000000006);
	ctx.lineTo(-30.814999999999998,-21.313000000000006);
	ctx.lineTo(-34.482,-21.313000000000006);
	ctx.lineTo(-34.482,-19.813000000000006);
	ctx.lineTo(-35.739,-19.813000000000006);
	ctx.bezierCurveTo(-36.352,-18.382000000000005,-36.763,-16.875000000000007,-37.001,-15.313000000000006);
	ctx.lineTo(-33.815,-15.313000000000006);
	ctx.lineTo(-33.815,-13.147000000000006);
	ctx.lineTo(-30.814999999999998,-13.147000000000006);
	ctx.lineTo(-30.814999999999998,-10.980000000000006);
	ctx.lineTo(-33.147999999999996,-10.980000000000006);
	ctx.lineTo(-33.147999999999996,-9.647000000000006);
	ctx.lineTo(-37.1,-9.647000000000006);
	ctx.bezierCurveTo(-36.559000000000005,-4.611000000000006,-34.448,0.7309999999999945,-30.987000000000002,5.853999999999994);
	ctx.lineTo(-29.484,5.853999999999994);
	ctx.lineTo(-29.484,4.187);
	ctx.lineTo(-27.817,4.187);
	ctx.lineTo(-27.817,5.854);
	ctx.lineTo(-26.15,5.854);
	ctx.lineTo(-26.15,8.187000000000001);
	ctx.lineTo(-23.817,8.187000000000001);
	ctx.lineTo(-23.817,12.354000000000001);
	ctx.lineTo(-19.984,12.354000000000001);
	ctx.lineTo(-19.984,13.854000000000001);
	ctx.lineTo(-14.484000000000002,13.854000000000001);
	ctx.lineTo(-14.484000000000002,16.02);
	ctx.lineTo(-19.817,16.02);
	ctx.lineTo(-19.817,17.781);
	ctx.bezierCurveTo(-18.051000000000002,19.191,-16.176000000000002,20.538999999999998,-14.185,21.796999999999997);
	ctx.bezierCurveTo(-13.071,22.499999999999996,-11.947000000000001,23.157999999999998,-10.817,23.776999999999997);
	ctx.lineTo(-10.817,20.687);
	ctx.closePath();
	ctx.moveTo(20.683,8.021);
	ctx.lineTo(20.766,5.188000000000001);
	ctx.lineTo(27.266,5.188000000000001);
	ctx.lineTo(27.266,7.104000000000001);
	ctx.lineTo(29.766,7.104000000000001);
	ctx.lineTo(29.766,8.438);
	ctx.lineTo(27.1,8.438);
	ctx.lineTo(27.1,11.604000000000001);
	ctx.lineTo(24.145000000000003,11.604000000000001);
	ctx.lineTo(24.145000000000003,9.104000000000001);
	ctx.lineTo(21.85,9.104000000000001);
	ctx.lineTo(21.85,12.271);
	ctx.lineTo(18.766000000000002,12.271);
	ctx.lineTo(18.766000000000002,8.021);
	ctx.lineTo(20.683,8.021);
	ctx.closePath();
	ctx.moveTo(12.933,-16.147);
	ctx.lineTo(15.766,-16.147);
	ctx.lineTo(15.766,-14.812999999999999);
	ctx.lineTo(17.766,-14.812999999999999);
	ctx.lineTo(17.766,-11.395999999999999);
	ctx.lineTo(14.515999999999998,-11.395999999999999);
	ctx.lineTo(14.515999999999998,-13.645999999999999);
	ctx.lineTo(12.932999999999998,-13.771999999999998);
	ctx.lineTo(12.932999999999998,-16.147);
	ctx.closePath();
	ctx.moveTo(12.516,-3.729);
	ctx.lineTo(15.016,-3.729);
	ctx.lineTo(19.266,-3.729);
	ctx.lineTo(19.266,-1.646);
	ctx.lineTo(12.515999999999998,-1.646);
	ctx.lineTo(12.515999999999998,-3.729);
	ctx.closePath();
	ctx.moveTo(-3.067,13.271);
	ctx.lineTo(-3.067,12.271);
	ctx.lineTo(-0.07000000000000028,12.271);
	ctx.lineTo(-0.07000000000000028,14.438);
	ctx.lineTo(1.3499999999999996,14.438);
	ctx.lineTo(1.3499999999999996,15.938);
	ctx.lineTo(-0.9000000000000004,15.938);
	ctx.lineTo(-0.9000000000000004,18.02);
	ctx.lineTo(-2.4000000000000004,18.02);
	ctx.lineTo(-2.4000000000000004,19.104);
	ctx.lineTo(-3.6500000000000004,19.104);
	ctx.lineTo(-3.6500000000000004,15.687);
	ctx.lineTo(-4.9830000000000005,15.687);
	ctx.lineTo(-4.9830000000000005,14.437999999999999);
	ctx.lineTo(-6.066000000000001,14.437999999999999);
	ctx.lineTo(-6.149000000000001,13.270999999999999);
	ctx.lineTo(-3.067,13.270999999999999);
	ctx.closePath();
	ctx.moveTo(-21.818,-14.813);
	ctx.lineTo(-23.318,-14.813);
	ctx.lineTo(-23.318,-16.48);
	ctx.lineTo(-21.818,-16.48);
	ctx.lineTo(-21.818,-14.813);
	ctx.closePath();
	ctx.moveTo(-15.651,-16.147);
	ctx.lineTo(-15.651,-18.479999999999997);
	ctx.lineTo(-13.484,-18.479999999999997);
	ctx.lineTo(-13.484,-20.484999999999996);
	ctx.lineTo(-10.651,-20.479999999999997);
	ctx.lineTo(-10.651,-16.147);
	ctx.lineTo(-15.651,-16.147);
	ctx.closePath();
	ctx.moveTo(31.85,24.229);
	ctx.lineTo(31.85,20.686999999999998);
	ctx.lineTo(30.85,20.686999999999998);
	ctx.lineTo(30.85,25.153999999999996);
	ctx.bezierCurveTo(30.075000000000003,25.816999999999997,29.238,26.418999999999997,28.35,26.961999999999996);
	ctx.lineTo(28.35,26.773999999999997);
	ctx.lineTo(28.35,19.687999999999995);
	ctx.lineTo(30.516000000000002,19.687999999999995);
	ctx.lineTo(30.516000000000002,17.353999999999996);
	ctx.lineTo(33.274,17.353999999999996);
	ctx.lineTo(33.274,21.939999999999998);
	ctx.lineTo(33.78,21.939999999999998);
	ctx.bezierCurveTo(33.197,22.76,32.557,23.526,31.85,24.229);
	ctx.closePath();
	//
	if(ptObj.alpha < 0.001)
	{
		ptObj.alpha = 0;
	}
	else if(ptObj.alpha > 1)
	{
		ptObj.alpha = 1;
	}
	//
	var plateGrad = ctx.createLinearGradient(-37, 0, 37, 20);
    plateGrad.addColorStop(0,   "rgba(140, 10, 0, 0)");
    plateGrad.addColorStop(0.5, "rgba(140, 10, 0, " + ptObj.alpha + ")");
    plateGrad.addColorStop(1,   "rgba(140, 10, 0, 0)");
    ctx.fillStyle = plateGrad;
    ctx.fill();
    //
    var pattern = ctx.createPattern(ptObj.pic, 'repeat');
	ctx.fillStyle = pattern;
	//
	ctx.globalCompositeOperation = "source-in";
	//ctx.globalAlpha = 0.95;
	ctx.fill();
	//
	//ctx.globalAlpha = 1;
	ctx.globalCompositeOperation = "destination-over";
	ctx.fillStyle = plateGrad;
    ctx.fill();
    //
    ctx.globalCompositeOperation = "source-over";
    //
	
  	ctx.fillStyle = "rgba(255, 255, 255, " + ptObj.alpha + ")";

	drawOrText(ctx);
	//
	ctx.restore();
}

// 
function drawPlateText(ptObj)
{
	var finAlpha = 0.5;
	var delta = 100;
	//
	var ctx = ptObj.canvas.getContext('2d');
	//
	ctx.clearRect(0, 0, w, h);
	//
	ctx.save();
	ctx.translate(ptObj.x, ptObj.y);
	//
	ctx.beginPath();
	ctx.rect(0, 0, txtPlateWidth + delta, h);
	//
	var plateGrad = ctx.createLinearGradient(0, 0, txtPlateWidth, 0);
    plateGrad.addColorStop(0,   "rgba(175, 30, 20, 0)");
    plateGrad.addColorStop(0.3, "rgba(175, 30, 20, " + finAlpha + ")");
    plateGrad.addColorStop(1,   "rgb(175, 30, 20)");
    ctx.fillStyle = plateGrad;
    ctx.fill();
    //
    var pattern = ctx.createPattern(ptObj.pic, 'repeat');
	ctx.fillStyle = pattern;
	//
	ctx.globalCompositeOperation = "source-in";
	ctx.beginPath();
	ctx.globalAlpha = 0.35;
	ctx.rect(0, 0, txtPlateWidth + delta, h);
	ctx.fill();
	//
	ctx.globalAlpha = 1;
	ctx.globalCompositeOperation = "destination-over";
	ctx.beginPath();
	ctx.rect(0, 0, txtPlateWidth + delta, h);
	ctx.fillStyle = plateGrad;
    ctx.fill();
    //
    ctx.globalCompositeOperation = "source-over";
    //
	ctx.textBaseline = "middle";
	ctx.textAlign = "right";
	ctx.fillStyle = "rgb(255, 255, 255)";
	//
	ctx.shadowColor = "rgb(0, 0, 0)";
	ctx.shadowBlur = 3;
	ctx.shadowOffsetY = 1;
	//
	ctx.globalAlpha = Math.abs(ptObj.alpha);
ctx.translate(ptObj.width-10, ptObj.height / 2);	
	
	drawTPText(ctx);
	//
	ctx.restore();
}

// 
function drawPlateAgain(ptObj)
{
	var ctx = ptObj.canvas.getContext('2d');
	//
	ctx.save();
	ctx.translate(ptObj.x, ptObj.y);
	ctx.globalAlpha = ptObj.alpha;
	//
	ctx.beginPath();
	ctx.rect(0, 0, w / 2, ptObj.height + 50);
	//
	var plateGrad = ctx.createLinearGradient(0, 0, w / 2, 0);
    plateGrad.addColorStop(0, "rgba(160, 160, 160, 0)");
    plateGrad.addColorStop(0.33, "rgba(160, 160, 160, 1)");
    plateGrad.addColorStop(0.66, "rgba(160, 160, 160, 1)");
    plateGrad.addColorStop(1, "rgba(160, 160, 160, 0)");
    //
    ctx.fillStyle = plateGrad;
    ctx.fill();
    //
   	ctx.font = 'bold '+againSize+'pt '+font;	
	ctx.textBaseline = "middle";
	ctx.textAlign = "center";
	ctx.fillStyle = "rgba(255, 255, 255, 1)";
	//
	ctx.fillText(againText, w / 4, ptObj.height / 2);
	//
	ctx.restore();
}